openapi: 3.0.3
info:
  title: SFSB
  version: '0.0.1'
servers:
  - url: http://localhost:9001
tags:
  - name: material
    description: materials endpoints
  - name: workpiece
    description: workpiece endpoints
  - name: cutter tool
    description: cutter tool endpoints
  - name: measure
    description: measure instrument endpoints
  - name: additional tool
    description: additional tool endpoints
  - name: special tool
    description: special tool endpoints
  - name: tooling
    description: tooling endpoints
  - name: store
    description: store endpoints
  - name: production unit
    description: production unit endpoints
  - name: production area
    description: production area endpoints
  - name: setup
    description: setup endpoints
  - name: technology
    description: technology endpoints
  - name: item
    description: item endpoints
  - name: order
    description: order endpoints
  - name: department
    description: department endpoints
  - name: employee
    description: employee endpoints
  - name: customer
    description: customer endpoints
  - name: contact
    description: contact endpoints
  - name: company
    description: company endpoints
paths:
  /api/material:
    get:
      tags:
        - material
      summary: Найти все материалы
      operationId: getAll
      parameters:
        - name: offset
          in: query
          description: Часть выборки
          required: false
          example: 0
          schema:
            type: integer
        - name: limit
          in: query
          description: Количество в выбоке
          required: false
          example: 2
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Materials'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - material
      summary: Сохранение материала
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/material/{id}:
    get:
      tags:
        - material
      summary: Найти материал по id
      operationId: get
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - material
      summary: Обновление материала
      operationId: update
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaterialPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Material'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - material
      summary: Удаление материала
      operationId: delete
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/workpiece:
    get:
      tags:
        - workpiece
      summary: Найти все заготовки
      operationId: getAll
      parameters:
        - name: offset
          in: query
          description: Часть выборки
          required: false
          example: 0
          schema:
            type: integer
        - name: limit
          in: query
          description: Количество в выбоке
          required: false
          example: 2
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workpieces'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - workpiece
      summary: Сохранение заготовки
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkpiecePost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workpiece'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/workpiece/{id}:
    get:
      tags:
        - workpiece
      summary: Найти заготовку по id
      operationId: get
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workpiece'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - workpiece
      summary: Обновление заготовки
      operationId: update
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkpiecePost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workpiece'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - workpiece
      summary: Удаление заготовки
      operationId: delete
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/tooling:
    get:
      tags:
        - tooling
      summary: Найти всю оснастку
      operationId: getAll
      parameters:
        - name: offset
          in: query
          description: Часть выборки
          required: false
          example: 0
          schema:
            type: integer
        - name: limit
          in: query
          description: Количество в выбоке
          required: false
          example: 2
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Toolings'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - tooling
      summary: Сохранение оснастки
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolingPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tooling'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/tooling/{id}:
    get:
      tags:
        - tooling
      summary: Найти оснастку по id
      operationId: get
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tooling'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - tooling
      summary: Обновление оснастки
      operationId: update
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolingPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tooling'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - tooling
      summary: Удаление оснастки
      operationId: delete
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/cutter:
    get:
      tags:
        - cutter tool
      summary: Найти весь инструмент
      operationId: getAll
      parameters:
        - name: offset
          in: query
          description: Часть выборки
          required: false
          example: 0
          schema:
            type: integer
        - name: limit
          in: query
          description: Количество в выбоке
          required: false
          example: 2
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CutterTools'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - cutter tool
      summary: Сохранение инструмента
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CutterToolPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CutterTool'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/cutter/{id}:
    get:
      tags:
        - cutter tool
      summary: Найти инструмент по id
      operationId: get
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CutterTool'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - cutter tool
      summary: Обновление инструмента
      operationId: update
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CutterToolPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CutterTool'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - cutter tool
      summary: Удаление инструмента
      operationId: delete
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/measure:
    get:
      tags:
        - measure
      summary: Найти весь меритель
      operationId: getAll
      parameters:
        - name: offset
          in: query
          description: Часть выборки
          required: false
          example: 0
          schema:
            type: integer
        - name: limit
          in: query
          description: Количество в выбоке
          required: false
          example: 2
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureTools'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - measure
      summary: Сохранение мерителя
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasureToolPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureTool'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/measure/{id}:
    get:
      tags:
        - measure
      summary: Найти меритель по id
      operationId: get
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureTool'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - measure
      summary: Обновление мерителя
      operationId: update
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasureToolPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasureTool'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - measure
      summary: Удаление мерителя
      operationId: delete
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/special:
    get:
      tags:
        - special tool
      summary: Найти весь специнструмент
      operationId: getAll
      parameters:
        - name: offset
          in: query
          description: Часть выборки
          required: false
          example: 0
          schema:
            type: integer
        - name: limit
          in: query
          description: Количество в выбоке
          required: false
          example: 2
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialTools'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - special tool
      summary: Сохранение специнструмента
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecialToolPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialTool'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/special/{id}:
    get:
      tags:
        - special tool
      summary: Найти специнструмент по id
      operationId: get
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialTool'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - special tool
      summary: Обновление специнструмента
      operationId: update
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecialToolPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialTool'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - special tool
      summary: Удаление специнструмента
      operationId: delete
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/additional:
    get:
      tags:
        - additional tool
      summary: Найти все приспособления
      operationId: getAll
      parameters:
        - name: offset
          in: query
          description: Часть выборки
          required: false
          example: 0
          schema:
            type: integer
        - name: limit
          in: query
          description: Количество в выбоке
          required: false
          example: 2
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalTool'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - additional tool
      summary: Сохранение приспособления
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalToolPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalTool'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/additional/{id}:
    get:
      tags:
        - additional tool
      summary: Найти приспособление по id
      operationId: get
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalTool'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - additional tool
      summary: Обновление приспособления
      operationId: update
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalToolPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalTool'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - additional tool
      summary: Удаление приспособления
      operationId: delete
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/unit:
    get:
      tags:
        - production unit
      summary: Найти все станки
      operationId: getAll
      parameters:
        - name: offset
          in: query
          description: Часть выборки
          required: false
          example: 0
          schema:
            type: integer
        - name: limit
          in: query
          description: Количество в выбоке
          required: false
          example: 2
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionUnits'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - production unit
      summary: Сохранение станка
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionUnitPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionUnit'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/unit/{id}:
    get:
      tags:
        - production unit
      summary: Найти станок по id
      operationId: get
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionUnit'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - production unit
      summary: Обновление станка
      operationId: update
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionUnitPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionUnit'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - production unit
      summary: Удаление станка
      operationId: delete
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/company:
    post:
      tags:
        - company
      summary: Сохранение компании
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/company/{id}:
    get:
      tags:
        - company
      summary: Найти компанию по id
      operationId: get
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - company
      summary: Обновление компании
      operationId: update
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - company
      summary: Удаление компании
      operationId: delete
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/employee:
    get:
      tags:
        - employee
      summary: Найти всех сотрудников
      operationId: getAll
      parameters:
        - name: offset
          in: query
          description: Часть выборки
          required: false
          example: 0
          schema:
            type: integer
        - name: limit
          in: query
          description: Количество в выбоке
          required: false
          example: 2
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employees'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - employee
      summary: Сохранение сотрудника
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/employee/{id}:
    get:
      tags:
        - employee
      summary: Найти сотрудника по id
      operationId: get
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - employee
      summary: Обновление сотрудника
      operationId: update
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - employee
      summary: Удаление сотрудника
      operationId: delete
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/department:
    get:
      tags:
        - department
      summary: Найти всех отделы
      operationId: getAll
      parameters:
        - name: offset
          in: query
          description: Часть выборки
          required: false
          example: 0
          schema:
            type: integer
        - name: limit
          in: query
          description: Количество в выбоке
          required: false
          example: 2
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Departments'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - department
      summary: Сохранение отдела
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/department/{id}:
    get:
      tags:
        - department
      summary: Найти отдел по id
      operationId: get
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentPost'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - department
      summary: Обновление отдела
      operationId: update
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - department
      summary: Удаление отдела
      operationId: delete
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/contact:
    get:
      tags:
        - contact
      summary: Найти все контакты
      operationId: getAll
      parameters:
        - name: offset
          in: query
          description: Часть выборки
          required: false
          example: 0
          schema:
            type: integer
        - name: limit
          in: query
          description: Количество в выбоке
          required: false
          example: 2
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contacts'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - contact
      summary: Сохранение контакта
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/contact/{id}:
    get:
      tags:
        - contact
      summary: Найти контакт по id
      operationId: get
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - contact
      summary: Обновление контакта
      operationId: update
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - contact
      summary: Удаление контакта
      operationId: delete
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/customer:
    get:
      tags:
        - customer
      summary: Найти всех заказчиков
      operationId: getAll
      parameters:
        - name: offset
          in: query
          description: Часть выборки
          required: false
          example: 0
          schema:
            type: integer
        - name: limit
          in: query
          description: Количество в выбоке
          required: false
          example: 2
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - customer
      summary: Сохранение заказчика
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/customer/{id}:
    get:
      tags:
        - customer
      summary: Найти заказчика по id
      operationId: get
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - customer
      summary: Обновление заказчика
      operationId: update
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPost'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - customer
      summary: Удаление заказчика
      operationId: delete
      parameters:
        - name: id
          in: path
          description: id элемента
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
        'default':
          description: Все что не 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    Monetary:
      type: object
      required:
        - amount
        - currency
      properties:
        amount:
          type: integer
          format: int32
          example: 1000
        currency:
          type: string
          example: 'RUB'
    Material:
      type: object
      required:
        - materialName
        - density
      properties:
        id:
          type: integer
          format: int64
          example: 10
        created:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        updated:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        materialName:
          type: string
          example: АМг3
        density:
          type: integer
          format: int32
          example: 2670
    Materials:
      type: array
      items:
        $ref: '#/components/schemas/Material'
    MaterialPost:
      type: object
      required:
        - materialName
        - density
      properties:
        materialName:
          type: string
          example: АМг3
          nullable: false
        density:
          type: integer
          format: int32
          example: 2670
          nullable: false
    Workpiece:
      type: object
      required:
        - material
        - geometry
        - geom1
        - geom2
        - geom3
      properties:
        id:
          type: integer
          format: int64
          example: 10
        created:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        updated:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        material:
          $ref: '#/components/schemas/Material'
        geometry:
          type: string
          enum: [
            "КРУГ",
            "ПЛИТА",
            "ТРУБА",
            "ЛИТЬЕ"
          ]
        geom1:
          type: integer
          format: int32
          example: 300
        geom2:
          type: integer
          format: int32
          example: 100
        geom3:
          type: integer
          format: int32
          example: 30
        price:
          $ref: '#/components/schemas/Monetary'
    Workpieces:
      type: array
      items:
        $ref: '#/components/schemas/Workpiece'
    WorkpiecePost:
      type: object
      required:
        - material
        - geometry
        - geom1
        - geom2
        - geom3
      properties:
        material:
          type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
              example: 1
        geometry:
          type: string
          enum: [
            "ПЛИТА",
            "КРУГ",
            "ТРУБА",
            "ЛИТЬЕ"
          ]
        geom1:
          type: integer
          format: int32
          example: 300
        geom2:
          type: integer
          format: int32
          example: 100
        geom3:
          type: integer
          format: int32
          example: 30
        price:
          $ref: '#/components/schemas/Monetary'
    Tooling:
      type: object
      required:
        - toolingName
      properties:
        id:
          type: integer
          format: int64
          example: 10
        created:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        updated:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        toolingName:
          type: string
          example: 'chuck'
        price:
          $ref: '#/components/schemas/Monetary'
    Toolings:
      type: array
      items:
        $ref: '#/components/schemas/Tooling'
    ToolingPost:
      type: object
      required:
        - toolingName
      properties:
        toolingName:
          type: string
          example: 'chuck'
        description:
          type: string
          example: 'chuck description'
        price:
          $ref: '#/components/schemas/Monetary'
    CutterTool:
      type: object
      required:
        - toolName
      properties:
        id:
          type: integer
          format: int64
          example: 10
        created:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        updated:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        toolName:
          type: string
          example: 'HET DEC1212'
        description:
          type: string
          example: 'Фреза 12 по алюминию'
        price:
          $ref: '#/components/schemas/Monetary'
    CutterTools:
      type: array
      items:
        $ref: '#/components/schemas/CutterTool'
    CutterToolPost:
      type: object
      required:
        - toolName
      properties:
        toolName:
          type: string
          example: 'HET DEC1212'
        description:
          type: string
          example: 'Фреза 12 по алюминию'
        price:
          $ref: '#/components/schemas/Monetary'
    MeasureTool:
      type: object
      required:
        - toolName
      properties:
        id:
          type: integer
          format: int64
          example: 10
        created:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        updated:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        toolName:
          type: string
          example: 'MAHR measure 150L'
        description:
          type: string
          example: 'Штангель 150 мм'
        price:
          $ref: '#/components/schemas/Monetary'
    MeasureTools:
      type: array
      items:
        $ref: '#/components/schemas/MeasureTool'
    MeasureToolPost:
      type: object
      required:
        - toolName
      properties:
        toolName:
          type: string
          example: 'MAHR measure 150L'
        description:
          type: string
          example: 'Штангель 150 мм'
        price:
          $ref: '#/components/schemas/Monetary'
    SpecialTool:
      type: object
      required:
        - toolName
        - workpiece
      properties:
        id:
          type: integer
          format: int64
          example: 10
        created:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        updated:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        toolName:
          type: string
          example: 'Фреза грибковая ф20х1'
        workpiece:
          $ref: '#/components/schemas/Workpiece'
        processTime:
          type: string
          description: Длительность в формате PT[min]M[sec]S, например, PT16M40S
          pattern: '^PT\\d+M\\d+S$'
          example: 'PT16M40S'
    SpecialTools:
      type: array
      items:
        $ref: '#/components/schemas/SpecialTool'
    SpecialToolPost:
      type: object
      required:
        - toolName
        - workpiece
      properties:
        toolName:
          type: string
          example: 'Фреза грибковая ф20х1'
        workpiece:
          type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
              example: 1
        processTime:
          type: string
          description: Длительность в формате PT[min]M[sec]S, например, PT16M40S
          pattern: '^PT\\d+M\\d+S$'
          example: 'PT16M40S'
    AdditionalTool:
      type: object
      required:
        - toolName
        - workpiece
      properties:
        id:
          type: integer
          format: int64
          example: 10
        created:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        updated:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        toolName:
          type: string
          example: 'Приспособа'
        workpiece:
          $ref: '#/components/schemas/Workpiece'
        processTime:
          type: string
          description: Длительность в формате PT[min]M[sec]S, например, PT16M40S
          pattern: '^PT\\d+M\\d+S$'
          example: 'PT16M40S'
    AdditionalTools:
      type: array
      items:
        $ref: '#/components/schemas/AdditionalTool'
    AdditionalToolPost:
      type: object
      required:
        - toolName
        - workpiece
      properties:
        toolName:
          type: string
          example: 'Приспособа'
        workpiece:
          type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
              example: 1
        processTime:
          type: string
          description: Длительность в формате PT[min]M[sec]S, например, PT16M40S
          pattern: '^PT\\d+M\\d+S$'
          example: 'PT16M40S'
    ProductionUnit:
      type: object
      required:
        - unitName
      properties:
        id:
          type: integer
          format: int64
          example: 10
        created:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        updated:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        unitName:
          type: string
          example: 'DMC 1035 Ecoline'
        price:
          $ref: '#/components/schemas/Monetary'
        paymentPerHour:
          $ref: '#/components/schemas/Monetary'
    ProductionUnits:
      type: array
      items:
        $ref: '#/components/schemas/MeasureTool'
    ProductionUnitPost:
      type: object
      required:
        - unitName
      properties:
        unitName:
          type: string
          example: 'DMC 1035 Ecoline'
        price:
          $ref: '#/components/schemas/Monetary'
        paymentPerHour:
          $ref: '#/components/schemas/Monetary'
    Company:
      type: object
      required:
        - companyName
        - address
        - inn
        - kpp
        - okpo
        - paymentAccount
        - bank
        - bik
        - correspondentAccount
        - phoneNumber
        - email
        - director
      properties:
        id:
          type: integer
          format: int64
          example: 10
        created:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        updated:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        companyName:
          type: string
          example: 'ООО Вычислительные решения'
        address:
          type: string
          example: 'г Заречный ул хуйпоймикакая д1'
        inn:
          type: string
          pattern: '^[0-9]{10}$'
          example: '1234567890'
        kpp:
          type: string
          pattern: '^[0-9]{9}$'
          example: '123456789'
        ogrn:
          type: string
          pattern: '^[0-9]{13}$'
          example: '1234567891234'
        paymentAccount:
          type: string
          pattern: '^[0-9]{20}$'
          example: '12345678901234567890'
        bank:
          type: string
          example: 'ВТБ'
        bik:
          type: string
          pattern: '^[0-9]{9}$'
          example: '123456789'
        correspondentAccount:
          type: string
          pattern: '^[0-9]{20}$'
          example: '12345678901234567890'
        phoneNumber:
          type: string
          pattern: '^\+7\s\(\d{4}\)\s\d{2}-\d{2}-\d{2}$'
          example: '+7 (8412) 75-50-55'
        email:
          type: string
          pattern: '^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$'
          example: 'example.email@example.com'
        director:
          type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
              example: 1
    CompanyPost:
      type: object
      required:
        - companyName
        - address
        - inn
        - kpp
        - okpo
        - paymentAccount
        - bank
        - bik
        - correspondentAccount
        - phoneNumber
        - email
        - director
      properties:
        companyName:
          type: string
          example: 'ООО Вычислительные решения'
        address:
          type: string
          example: 'г Заречный ул хуйпоймикакая д1'
        inn:
          type: string
          pattern: '^[0-9]{10}$'
          example: '1234567890'
        kpp:
          type: string
          pattern: '^[0-9]{9}$'
          example: '123456789'
        ogrn:
          type: string
          pattern: '^[0-9]{13}$'
          example: '1234567891234'
        paymentAccount:
          type: string
          pattern: '^[0-9]{20}$'
          example: '12345678901234567890'
        bank:
          type: string
          example: 'ВТБ'
        bik:
          type: string
          pattern: '^[0-9]{9}$'
          example: '123456789'
        correspondentAccount:
          type: string
          pattern: '^[0-9]{20}$'
          example: '12345678901234567890'
        phoneNumber:
          type: string
          pattern: '^\+7\s\(\d{4}\)\s\d{2}-\d{2}-\d{2}$'
          example: '+7 (8412) 75-50-55'
        email:
          type: string
          pattern: '^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$'
          example: 'example.email@example.com'
    Employee:
      type: object
      required:
        - firstName
        - lastName
      properties:
        id:
          type: integer
          format: int64
          example: 10
        created:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        updated:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        firstName:
          type: string
          example: 'Николай Николаевич'
        lastName:
          type: string
          example: 'Николаев'
        position:
          type: string
          example: 'Начальник производства'
        phoneNumber:
          type: string
          pattern: '^\+7\s\(\d{4}\)\s\d{2}-\d{2}-\d{2}$'
          example: '+7 (8412) 75-50-55'
        email:
          type: string
          pattern: '^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$'
          example: 'example.email@example.com'
        department:
          $ref: '#/components/schemas/Department'
    Employees:
      type: array
      items:
        $ref: '#/components/schemas/Employee'
    EmployeePost:
      type: object
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: string
          example: 'Николай Николаевич'
        lastName:
          type: string
          example: 'Николаев'
        position:
          type: string
          example: 'Начальник производства'
        phoneNumber:
          type: string
          pattern: '^\+7\s\(\d{4}\)\s\d{2}-\d{2}-\d{2}$'
          example: '+7 (8412) 75-50-55'
        email:
          type: string
          pattern: '^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$'
          example: 'example.email@example.com'
        department:
          type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
              example: 1
    Department:
      type: object
      required:
        - departmentName
      properties:
        id:
          type: integer
          format: int64
          example: 10
        created:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        updated:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        departmentName:
          type: string
          example: 'Отдел продаж'
        company:
          $ref: '#/components/schemas/Company'
    Departments:
      type: array
      items:
        $ref: '#/components/schemas/Department'
    DepartmentPost:
      type: object
      required:
        - departmentName
      properties:
        departmentName:
          type: string
          example: 'Отдел продаж'
        company:
          type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
              example: 1
    Contact:
      type: object
      required:
        - firstName
        - lastName
      properties:
        id:
          type: integer
          format: int64
          example: 10
        created:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        updated:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        firstName:
          type: string
          example: 'Николай Николаевич'
        lastName:
          type: string
          example: 'Николаев'
        position:
          type: string
          example: 'Начальник производства'
        phoneNumber:
          type: string
          pattern: '^\+7\s\(\d{4}\)\s\d{2}-\d{2}-\d{2}$'
          example: '+7 (8412) 75-50-55'
        email:
          type: string
          pattern: '^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$'
          example: 'example.email@example.com'
        customer:
          $ref: '#/components/schemas/Customer'
    Contacts:
      type: array
      items:
        $ref: '#/components/schemas/Contact'
    ContactPost:
      type: object
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: string
          example: 'Николай Николаевич'
        lastName:
          type: string
          example: 'Николаев'
        position:
          type: string
          example: 'Начальник производства'
        phoneNumber:
          type: string
          pattern: '^\+7\s\(\d{4}\)\s\d{2}-\d{2}-\d{2}$'
          example: '+7 (8412) 75-50-55'
        email:
          type: string
          pattern: '^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$'
          example: 'example.email@example.com'
        customer:
          type: object
          required:
            - id
          properties:
            id:
              type: integer
              example: 1
    Customer:
      type: object
      required:
        - companyName
        - address
        - inn
        - kpp
        - okpo
        - paymentAccount
        - bank
        - bik
        - correspondentAccount
        - phoneNumber
        - email
      properties:
        id:
          type: integer
          format: int64
          example: 10
        created:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        updated:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
          description: Дата в формате yyyy-MM-dd HH:mm, например, 2023-06-23 15:07
          example: '2023-06-23 15:07'
        companyName:
          type: string
          example: 'ООО Вычислительные решения'
        address:
          type: string
          example: 'г Заречный ул хуйпоймикакая д1'
        inn:
          type: string
          pattern: '^[0-9]{10}$'
          example: '1234567890'
        kpp:
          type: string
          pattern: '^[0-9]{9}$'
          example: '123456789'
        okpo:
          type: string
          pattern: '^[0-9]{8,10}$'
          example: '12345678'
        paymentAccount:
          type: string
          pattern: '^[0-9]{20}$'
          example: '12345678901234567890'
        bank:
          type: string
          example: 'ВТБ'
        bik:
          type: string
          pattern: '^[0-9]{9}$'
          example: '123456789'
        correspondentAccount:
          type: string
          pattern: '^[0-9]{20}$'
          example: '12345678901234567890'
        phoneNumber:
          type: string
          pattern: '^\+7\s\(\d{4}\)\s\d{2}-\d{2}-\d{2}$'
          example: '+7 (8412) 75-50-55'
        email:
          type: string
          pattern: '^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$'
          example: 'example.email@example.com'
        contacts:
          $ref: '#/components/schemas/Contacts'
    Customers:
      type: array
      items:
        $ref: '#/components/schemas/Customer'
    CustomerPost:
      type: object
      required:
        - companyName
        - address
        - inn
        - kpp
        - okpo
        - paymentAccount
        - bank
        - bik
        - correspondentAccount
        - phoneNumber
        - email
      properties:
        companyName:
          type: string
          example: 'ООО Вычислительные решения'
        address:
          type: string
          example: 'г Заречный ул хуйпоймикакая д1'
        inn:
          type: string
          pattern: '^[0-9]{10}$'
          example: '1234567890'
        kpp:
          type: string
          pattern: '^[0-9]{9}$'
          example: '123456789'
        okpo:
          type: string
          pattern: '^[0-9]{8,10}$'
          example: '12345678'
        paymentAccount:
          type: string
          pattern: '^[0-9]{20}$'
          example: '12345678901234567890'
        bank:
          type: string
          example: 'ВТБ'
        bik:
          type: string
          pattern: '^[0-9]{9}$'
          example: '123456789'
        correspondentAccount:
          type: string
          pattern: '^[0-9]{20}$'
          example: '12345678901234567890'
        phoneNumber:
          type: string
          pattern: '^\+7\s\(\d{4}\)\s\d{2}-\d{2}-\d{2}$'
          example: '+7 (8412) 75-50-55'
        email:
          type: string
          pattern: '^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$'
          example: 'example.email@example.com'